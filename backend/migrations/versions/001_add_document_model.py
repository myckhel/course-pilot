"""Add Document model for file tracking and deduplication

Revision ID: 001_add_document_model
Revises: 58e9227db81a
Create Date: 2025-06-17 00:43:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '001_add_document_model'
down_revision = '58e9227db81a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table already exists before creating
    connection = op.get_bind()
    inspector = sa.inspect(connection)
    
    if 'documents' not in inspector.get_table_names():
        op.create_table('documents',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('topic_id', sa.String(length=36), nullable=False),
        sa.Column('filename', sa.String(length=255), nullable=False),
        sa.Column('original_filename', sa.String(length=255), nullable=False),
        sa.Column('file_path', sa.String(length=500), nullable=False),
        sa.Column('file_hash', sa.String(length=64), nullable=False),
        sa.Column('file_size', sa.Integer(), nullable=False),
        sa.Column('content_hash', sa.String(length=64), nullable=False),
        sa.Column('chunk_count', sa.Integer(), nullable=False),
        sa.Column('is_processed', sa.Boolean(), nullable=False),
        sa.Column('uploaded_by', sa.String(length=36), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
        sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        
        with op.batch_alter_table('documents', schema=None) as batch_op:
            batch_op.create_index(batch_op.f('ix_documents_content_hash'), ['content_hash'], unique=False)
            batch_op.create_index(batch_op.f('ix_documents_file_hash'), ['file_hash'], unique=False)
    else:
        # Table exists, just ensure indexes are created
        existing_indexes = inspector.get_indexes('documents')
        index_names = [idx['name'] for idx in existing_indexes]
        
        if 'ix_documents_content_hash' not in index_names:
            with op.batch_alter_table('documents', schema=None) as batch_op:
                batch_op.create_index(batch_op.f('ix_documents_content_hash'), ['content_hash'], unique=False)
        
        if 'ix_documents_file_hash' not in index_names:
            with op.batch_alter_table('documents', schema=None) as batch_op:
                batch_op.create_index(batch_op.f('ix_documents_file_hash'), ['file_hash'], unique=False)
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_documents_file_hash'))
        batch_op.drop_index(batch_op.f('ix_documents_content_hash'))

    op.drop_table('documents')
    # ### end Alembic commands ###
